1. renderdoc/renderdoc/driver/gl/egl_hooks.cpp

HOOK_EXPORT EGLBoolean EGLAPIENTRY eglSwapBuffersWithDamageKHR_renderdoc_hooked(EGLDisplay dpy, EGLSurface surface, EGLint *rects, EGLint n_rects)
{
  if(RenderDoc::Inst().IsReplayApp())
  {
    if(!EGL.SwapBuffers)
      EGL.PopulateForReplay();

    return EGL.SwapBuffers(dpy, surface);
  }

  SCOPED_LOCK(glLock);

  eglhook.driver.SetDriverType(RDCDriver::OpenGLES);
  if(!eglhook.driver.UsesVRFrameMarkers())
    eglhook.driver.SwapBuffers(surface);

  // return EGL.SwapBuffers(dpy, surface);
  return EGL.SwapBuffersWithDamageKHR(dpy, surface, rects, n_rects);
}

2. renderdoc/renderdoc/driver/gl/egl_dispatch_table.h
#define EGL_HOOKED_SYMBOLS(FUNC)    \
  FUNC(GetProcAddress, false);      \
  FUNC(GetDisplay, false);          \
  FUNC(CreateContext, false);       \
  FUNC(DestroyContext, false);      \
  FUNC(CreateWindowSurface, false); \
  FUNC(MakeCurrent, false);         \
  FUNC(SwapBuffers, false);         \
  FUNC(SwapBuffersWithDamageKHR, false);         \
  FUNC(PostSubBufferNV, true);

3. 
